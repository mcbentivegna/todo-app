{"version":3,"sources":["Components/Header.js","Components/AddTaskForm.js","Components/StatusBar.js","Components/Task.js","taskData.js","App.js","index.js"],"names":["Header","className","AddTaskForm","this","props","classes","editing","handleSubmit","text","updateTaskText","index","toggleState","root","onSubmit","e","preventDefault","input","value","currentTarget","reset","TextField","id","label","defaultValue","inputRef","ref","inputProps","maxLength","React","Component","withStyles","width","display","flexWrap","float","position","bottom","right","notSelected","borderRadius","background","color","new","inProgress","done","status","changeTaskStatus","Chip","onClick","size","clickable","Task","state","setState","prevState","newTask","deleteTask","Container","maxWidth","Close","close","Edit","edit","border","boxShadow","height","padding","top","taskData","priority","minPriority","length","maxId","reduce","acc","cur","Math","max","App","findTaskIndex","findIndex","obj","newText","arrayIndex","newTaskData","newState","filter","task","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48d6d6a3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className= 'app-header'>\r\n      <h1>To Do List</h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { withStyles } from '@material-ui/core/'\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexWrap: 'wrap'\r\n    }\r\n  }\r\n})\r\n\r\nclass AddTaskForm extends React.Component {\r\n  render () {\r\n    const { classes, editing, handleSubmit, text, updateTaskText, index, toggleState } = this.props\r\n\r\n    const onSubmit = (e) => {\r\n      e.preventDefault()\r\n      if (text) {\r\n        updateTaskText(index, this.input.value)\r\n        toggleState()\r\n      } else {\r\n        handleSubmit(this.input.value)\r\n      }\r\n      e.currentTarget.reset()\r\n    }\r\n\r\n    if (editing) {\r\n      return (\r\n        <form\r\n          className={ classes.root }\r\n          onSubmit = {onSubmit}>\r\n          <TextField\r\n            id = \"add-task-form\"\r\n            label = \"Add Task\"\r\n            defaultValue = { text }\r\n            inputRef={ ref => this.input = ref }\r\n            inputProps = { { maxLength: '140' } }\r\n          />\r\n        </form>\r\n      )\r\n    } else {\r\n      return (null)\r\n    }\r\n  }\r\n}\r\n\r\nAddTaskForm.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  handleSubmit: PropTypes.func,\r\n  updateTaskText: PropTypes.func,\r\n  editing: PropTypes.bool,\r\n  text: PropTypes.string,\r\n  index: PropTypes.number,\r\n  toggleState: PropTypes.func\r\n}\r\n\r\nexport default withStyles(styles)(AddTaskForm)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Chip from '@material-ui/core/Chip'\r\n\r\nconst styles = {\r\n  root: {\r\n    float: 'right',\r\n    position: 'absolute',\r\n    bottom: '5px',\r\n    right: '5px'\r\n  },\r\n  notSelected: {\r\n    borderRadius: 3,\r\n    'margin-left': '5px',\r\n    background: 'DarkGray',\r\n    color: 'white',\r\n    'font-weight': 'bold'\r\n  },\r\n  new: {\r\n    background: 'YellowGreen'\r\n  },\r\n  inProgress: {\r\n    background: 'Gold'\r\n  },\r\n  done: {\r\n    background: 'LightCoral'\r\n  }\r\n}\r\n\r\nconst StatusBar = (props) => {\r\n  const { classes, editing, status, index, changeTaskStatus } = props\r\n\r\n  if (!editing) {\r\n    return (\r\n      <div className = {classes.root}>\r\n        <Chip\r\n          onClick= {() => changeTaskStatus(index, 'done')}\r\n          className={ status === 'done' ? `${classes.notSelected} ${classes.done} done` : `${classes.notSelected}` }\r\n          size=\"small\"\r\n          label=\"Done\"\r\n          clickable = {false}\r\n        />\r\n        <Chip\r\n          onClick= {() => changeTaskStatus(index, 'inProgress')}\r\n          className={ status === 'inProgress' ? `${classes.notSelected} ${classes.inProgress}` : `${classes.notSelected}` }\r\n          size=\"small\"\r\n          label=\"In Progress\"\r\n          clickable = {false}\r\n        />\r\n        <Chip\r\n          onClick= {() => changeTaskStatus(index, 'new')}\r\n          className={ status === 'new' ? `${classes.notSelected} ${classes.new}` : `${classes.notSelected}`}\r\n          size=\"small\"\r\n          label=\"New\"\r\n          clickable = {false}\r\n        />\r\n      </div>\r\n    )\r\n  } else {\r\n    return (null)\r\n  }\r\n}\r\n\r\nStatusBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  handleSubmit: PropTypes.func,\r\n  addTask: PropTypes.bool,\r\n  status: PropTypes.string,\r\n  index: PropTypes.number\r\n}\r\n\r\nexport default withStyles(styles)(StatusBar)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\nimport { Close, Edit } from '@material-ui/icons'\r\nimport AddTaskForm from './AddTaskForm'\r\nimport StatusBar from './StatusBar'\r\n\r\nconst styles = {\r\n  root: {\r\n    background: '#dcd6f7',\r\n    border: 0,\r\n    borderRadius: 3,\r\n    boxShadow: '0 3px 5px 2px #a6b1e1',\r\n    color: '#424874',\r\n    height: 72,\r\n    padding: '0 30px',\r\n    'text-align': 'left',\r\n    position: 'relative'\r\n  },\r\n  close: {\r\n    position: 'absolute',\r\n    right: '5px',\r\n    top: '5px'\r\n  },\r\n  done: {\r\n    'text-decoration': 'line-through'\r\n  },\r\n  edit: {\r\n    color: '#a6b1e1',\r\n    'padding-inline-start': '10px'\r\n  }\r\n}\r\n\r\nclass Task extends React.Component {\r\n\r\n  state = {\r\n    editing: false\r\n  }\r\n\r\n  toggleState = () => {\r\n    this.setState ( prevState => {\r\n      return {\r\n        editing: !prevState.editing\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.props.newTask){\r\n      this.toggleState()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      text,\r\n      status,\r\n      index,\r\n      handleSubmit,\r\n      changeTaskStatus,\r\n      updateTaskText,\r\n      newTask,\r\n      deleteTask\r\n    } = this.props\r\n\r\n    return (\r\n      <div>\r\n        <Container\r\n          className={ status === 'done' ? `${classes.root} ${classes.done}` : classes.root }\r\n          maxWidth= 'sm'\r\n        >\r\n          <Close\r\n            className = {classes.close}\r\n            onClick = {() => deleteTask(index)}\r\n          />\r\n          {this.state.editing ? null : text}\r\n          {this.state.editing ? null : <Edit className = {classes.edit} onClick = {() => this.toggleState()}/> }\r\n          <AddTaskForm \r\n            editing={this.state.editing} \r\n            handleSubmit = {handleSubmit}\r\n            updateTaskText = {updateTaskText}\r\n            toggleState = {this.toggleState}\r\n            index = {index}\r\n            text = {text}></AddTaskForm>\r\n          <StatusBar editing= {this.state.editing} status= {status} index = {index} changeTaskStatus = {changeTaskStatus} />\r\n        </Container>\r\n        <p></p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTask.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  text: PropTypes.string,\r\n  addTask: PropTypes.bool,\r\n  status: PropTypes.string,\r\n  handleSubmit: PropTypes.func,\r\n  index: PropTypes.number,\r\n  changeTaskStatus: PropTypes.func,\r\n  updateTaskText: PropTypes.func,\r\n  deleteTask: PropTypes.func\r\n}\r\n\r\nexport default withStyles(styles)(Task)\r\n","const taskData = [\r\n  {\r\n    text: 'Pick up 1 gallon milk.',\r\n    priority: 1,\r\n    status: 'new',\r\n    index: 1\r\n  },\r\n  {\r\n    text: 'Schedule dentist appointments for next month.',\r\n    priority: 2,\r\n    status: 'inProgress',\r\n    index: 2\r\n  },\r\n  {\r\n    text: 'Call Aunt Hilda.',\r\n    priority: 3,\r\n    status: 'new',\r\n    index: 3\r\n  },\r\n  {\r\n    text: 'Fix broken cabinet.',\r\n    priority: 4,\r\n    status: 'done',\r\n    index: 4\r\n  },\r\n  {\r\n    text: 'Follow up with electrician.',\r\n    priority: 5,\r\n    status: 'done',\r\n    index: 5\r\n  }\r\n]\r\n\r\nconst minPriority = (taskData) => taskData.length\r\nconst maxId = (taskData) => taskData.reduce((acc, cur) => Math.max(acc, cur.index), 0)\r\n\r\nconst newTask = (taskData, text) => {\r\n  const task = {\r\n    text: text,\r\n    priority: minPriority(taskData) + 1,\r\n    status: 'new',\r\n    index: maxId(taskData) + 1\r\n  }\r\n  return task\r\n}\r\n\r\nexport { taskData, newTask, maxId }\r\n","import React from 'react'\nimport './App.css'\nimport Header from './Components/Header'\nimport Task from './Components/Task'\nimport { taskData, newTask } from './taskData'\n\nclass App extends React.Component {\n\n  state = {\n    taskData: taskData\n  };\n\n  handleSubmit = (text) => {\n    this.setState( prevState => {\n      return {\n        taskData: [\n          ...prevState.taskData,\n          newTask(prevState.taskData, text)\n        ]\n      }\n    })\n  }\n\n  \n  findTaskIndex = (prevState, index) => {\n    return prevState.taskData.findIndex(obj => obj.index === index);\n\n  } \n\n  updateTaskText = (index, newText) =>{\n    this.setState ( prevState => {\n      const arrayIndex = this.findTaskIndex(prevState, index)\n      let newTaskData = prevState.taskData\n      newTaskData[arrayIndex].text = newText\n\n      return {\n        taskData: newTaskData\n      }\n    })\n  }\n\n\n\n  changeTaskStatus = (index, newState) => {\n    this.setState ( prevState => {\n      const arrayIndex = this.findTaskIndex(prevState, index)\n      let newTaskData = prevState.taskData\n      newTaskData[arrayIndex].status = newState\n\n      return {\n        taskData: newTaskData\n      }\n    })\n  }\n\n  deleteTask = (index) => {  \n    this.setState ( prevState => {\n      let newTaskData = prevState.taskData\n      newTaskData = newTaskData.filter( (task) => task.index !== index )\n    return {\n        taskData: newTaskData\n      }\n    })\n  }\n\n  render () {\n    return (\n      <div className='App'>\n        <Header />\n        {this.state.taskData.map((task) => {\n          return (\n            <Task\n              text = {task.text}\n              key = {task.index}\n              status = {task.status}\n              index = {task.index}\n              changeTaskStatus = {this.changeTaskStatus}\n              deleteTask = {this.deleteTask}\n              newTask = {false}\n              updateTaskText = {this.updateTaskText}\n            />)\n        })}\n        <Task\n          key = {'add-task'}\n          newTask = {true}\n          handleSubmit = {this.handleSubmit}\n           />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}