{"version":3,"sources":["Components/Header.js","Components/AddTaskForm.js","Components/StatusBar.js","Components/Task.js","taskData.js","App.js","index.js"],"names":["Header","className","AddTaskForm","this","props","classes","editing","error","toggleError","handleSubmit","text","updateTaskText","index","toggleEditing","root","onSubmit","e","preventDefault","input","value","currentTarget","reset","onChange","length","console","log","TextField","id","label","defaultValue","inputRef","ref","inputProps","maxLength","helperText","React","Component","withStyles","width","display","flexWrap","float","position","bottom","right","notSelected","borderRadius","background","color","new","inProgress","done","status","changeTaskStatus","Chip","onClick","size","clickable","Task","state","setState","prevState","newTask","deleteTask","Container","maxWidth","Tooltip","title","Close","close","Edit","edit","border","boxShadow","height","padding","top","taskData","priority","minPriority","maxId","reduce","acc","cur","Math","max","App","findTaskIndex","findIndex","obj","newText","arrayIndex","newTaskData","newState","filter","task","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89280b32.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className= 'app-header'>\r\n      <h1>To Do List</h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { withStyles } from '@material-ui/core/'\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      width: '100%',\r\n      display: 'flex',\r\n      flexWrap: 'wrap'\r\n    }\r\n  }\r\n})\r\n\r\nclass AddTaskForm extends React.Component {\r\n\r\n  render () {\r\n    const { classes, \r\n            editing, \r\n            error,\r\n            toggleError,\r\n            handleSubmit, \r\n            text, \r\n            updateTaskText, \r\n            index, \r\n            toggleEditing } = this.props\r\n\r\n    const onSubmit = (e) => {\r\n      e.preventDefault()\r\n      if (text) {\r\n        updateTaskText(index, this.input.value)\r\n        toggleEditing()\r\n      } else {\r\n          handleSubmit(this.input.value)\r\n      }\r\n      e.currentTarget.reset()\r\n    }\r\n\r\n    const onChange = (e) => {\r\n      if (this.input.value.length >= 140){\r\n        console.log('test 140')\r\n        toggleError()\r\n      }\r\n    }\r\n\r\n    if (editing) {\r\n      return (\r\n        <form\r\n          className={ classes.root }\r\n          onSubmit = { onSubmit }\r\n          onChange = { onChange }>\r\n          <TextField\r\n            id = \"add-task-form\"\r\n            label = \"Add Task\"\r\n            defaultValue = { text }\r\n            inputRef={ ref => this.input = ref }\r\n            inputProps = { { maxLength: '140' } }\r\n            error = { error }\r\n            helperText = { error ? 'Tasks must 140 characters or less': ''}\r\n          />\r\n        </form>\r\n      )\r\n    } else {\r\n      return (null)\r\n    }\r\n  }\r\n}\r\n\r\nAddTaskForm.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  handleSubmit: PropTypes.func,\r\n  updateTaskText: PropTypes.func,\r\n  editing: PropTypes.bool,\r\n  toggleEditing: PropTypes.func,\r\n  error: PropTypes.bool,\r\n  toggleError: PropTypes.func,\r\n  text: PropTypes.string,\r\n  index: PropTypes.number  \r\n}\r\n\r\nexport default withStyles(styles)(AddTaskForm)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Chip from '@material-ui/core/Chip'\r\n\r\nconst styles = {\r\n  root: {\r\n    float: 'right',\r\n    position: 'absolute',\r\n    bottom: '5px',\r\n    right: '5px'\r\n  },\r\n  notSelected: {\r\n    borderRadius: 3,\r\n    'margin-left': '5px',\r\n    background: 'DarkGray',\r\n    color: 'white',\r\n    'font-weight': 'bold'\r\n  },\r\n  new: {\r\n    background: 'YellowGreen'\r\n  },\r\n  inProgress: {\r\n    background: 'Gold'\r\n  },\r\n  done: {\r\n    background: 'LightCoral'\r\n  }\r\n}\r\n\r\nconst StatusBar = (props) => {\r\n  const { classes, editing, status, index, changeTaskStatus } = props\r\n\r\n  if (!editing) {\r\n    return (\r\n      <div className = {classes.root}>\r\n        <Chip\r\n          onClick= {() => changeTaskStatus(index, 'done')}\r\n          className={ status === 'done' ? `${classes.notSelected} ${classes.done} done` : `${classes.notSelected}` }\r\n          size=\"small\"\r\n          label=\"Done\"\r\n          clickable = {false}\r\n        />\r\n        <Chip\r\n          onClick= {() => changeTaskStatus(index, 'inProgress')}\r\n          className={ status === 'inProgress' ? `${classes.notSelected} ${classes.inProgress}` : `${classes.notSelected}` }\r\n          size=\"small\"\r\n          label=\"In Progress\"\r\n          clickable = {false}\r\n        />\r\n        <Chip\r\n          onClick= {() => changeTaskStatus(index, 'new')}\r\n          className={ status === 'new' ? `${classes.notSelected} ${classes.new}` : `${classes.notSelected}`}\r\n          size=\"small\"\r\n          label=\"New\"\r\n          clickable = {false}\r\n        />\r\n      </div>\r\n    )\r\n  } else {\r\n    return (null)\r\n  }\r\n}\r\n\r\nStatusBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  handleSubmit: PropTypes.func,\r\n  addTask: PropTypes.bool,\r\n  status: PropTypes.string,\r\n  index: PropTypes.number\r\n}\r\n\r\nexport default withStyles(styles)(StatusBar)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\nimport { Close, Edit } from '@material-ui/icons'\r\nimport Tooltip from '@material-ui/core/Tooltip'\r\nimport AddTaskForm from './AddTaskForm'\r\nimport StatusBar from './StatusBar'\r\n\r\nconst styles = {\r\n  root: {\r\n    background: '#dcd6f7',\r\n    border: 0,\r\n    borderRadius: 3,\r\n    boxShadow: '0 3px 5px 2px #a6b1e1',\r\n    color: '#424874',\r\n    height: 72,\r\n    padding: '0 30px',\r\n    'text-align': 'left',\r\n    position: 'relative'\r\n  },\r\n  close: {\r\n    position: 'absolute',\r\n    right: '5px',\r\n    top: '5px'\r\n  },\r\n  done: {\r\n    'text-decoration': 'line-through'\r\n  },\r\n  edit: {\r\n    color: '#a6b1e1',\r\n    'padding-inline-start': '10px'\r\n  }\r\n}\r\n\r\nclass Task extends React.Component {\r\n\r\n  state = {\r\n    editing: false,\r\n    error: false\r\n  }\r\n\r\n  toggleEditing = () => {\r\n    this.setState ( prevState => {\r\n      return {\r\n        editing: !prevState.editing\r\n      }\r\n    })\r\n  }\r\n\r\n  toggleError = () => {\r\n    this.setState ( prevState => {\r\n      console.log('test error' + ' ' + prevState.error)\r\n      return {\r\n        error: !prevState.error\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.props.newTask){\r\n      this.toggleEditing()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      text,\r\n      status,\r\n      index,\r\n      handleSubmit,\r\n      changeTaskStatus,\r\n      updateTaskText,\r\n      newTask,\r\n      deleteTask\r\n    } = this.props\r\n\r\n    return (\r\n      <div>\r\n        <Container\r\n          className={ status === 'done' ? `${classes.root} ${classes.done}` : classes.root }\r\n          maxWidth= 'sm'\r\n        >\r\n          {newTask ? null : <Tooltip title = \"Delete Task\"><Close className = {classes.close} onClick = {() => deleteTask(index)}/></Tooltip>}\r\n          {this.state.editing ? null : text}\r\n          {this.state.editing ? null : <Tooltip title = \"Edit\"><Edit className = {classes.edit} onClick = {() => this.toggleEditing()}/></Tooltip> }\r\n          <AddTaskForm \r\n            editing={this.state.editing} \r\n            toggleEditing = {this.toggleEditing}\r\n            error={this.state.error}\r\n            toggleError={this.toggleError}\r\n            handleSubmit = {handleSubmit}\r\n            updateTaskText = {updateTaskText}\r\n            index = {index}\r\n            text = {text}></AddTaskForm>\r\n          <StatusBar editing= {this.state.editing} status= {status} index = {index} changeTaskStatus = {changeTaskStatus} />\r\n        </Container>\r\n        <p></p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTask.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  text: PropTypes.string,\r\n  addTask: PropTypes.bool,\r\n  status: PropTypes.string,\r\n  handleSubmit: PropTypes.func,\r\n  index: PropTypes.number,\r\n  changeTaskStatus: PropTypes.func,\r\n  updateTaskText: PropTypes.func,\r\n  deleteTask: PropTypes.func\r\n}\r\n\r\nexport default withStyles(styles)(Task)\r\n","const taskData = [\r\n  {\r\n    text: 'Pick up 1 gallon milk.',\r\n    priority: 1,\r\n    status: 'new',\r\n    index: 1\r\n  },\r\n  {\r\n    text: 'Schedule dentist appointments for next month.',\r\n    priority: 2,\r\n    status: 'inProgress',\r\n    index: 2\r\n  },\r\n  {\r\n    text: 'Call Aunt Hilda.',\r\n    priority: 3,\r\n    status: 'new',\r\n    index: 3\r\n  },\r\n  {\r\n    text: 'Fix broken cabinet.',\r\n    priority: 4,\r\n    status: 'done',\r\n    index: 4\r\n  },\r\n  {\r\n    text: 'Follow up with electrician.',\r\n    priority: 5,\r\n    status: 'done',\r\n    index: 5\r\n  }\r\n]\r\n\r\nconst minPriority = (taskData) => taskData.length\r\nconst maxId = (taskData) => taskData.reduce((acc, cur) => Math.max(acc, cur.index), 0)\r\n\r\nconst newTask = (taskData, text) => {\r\n  const task = {\r\n    text: text,\r\n    priority: minPriority(taskData) + 1,\r\n    status: 'new',\r\n    index: maxId(taskData) + 1\r\n  }\r\n  return task\r\n}\r\n\r\nexport { taskData, newTask, maxId }\r\n","import React from 'react'\r\nimport './App.css'\r\nimport Header from './Components/Header'\r\nimport Task from './Components/Task'\r\nimport { taskData, newTask } from './taskData'\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    taskData: taskData\r\n  };\r\n\r\n  handleSubmit = (text) => {\r\n    this.setState( prevState => {\r\n      return {\r\n        taskData: [\r\n          ...prevState.taskData,\r\n          newTask(prevState.taskData, text)\r\n        ]\r\n      }\r\n    })\r\n  }\r\n\r\n  \r\n  findTaskIndex = (prevState, index) => {\r\n    return prevState.taskData.findIndex(obj => obj.index === index);\r\n\r\n  } \r\n\r\n  updateTaskText = (index, newText) =>{\r\n    this.setState ( prevState => {\r\n      const arrayIndex = this.findTaskIndex(prevState, index)\r\n      let newTaskData = prevState.taskData\r\n      newTaskData[arrayIndex].text = newText\r\n\r\n      return {\r\n        taskData: newTaskData\r\n      }\r\n    })\r\n  }\r\n\r\n  changeTaskStatus = (index, newState) => {\r\n    this.setState ( prevState => {\r\n      const arrayIndex = this.findTaskIndex(prevState, index)\r\n      let newTaskData = prevState.taskData\r\n      newTaskData[arrayIndex].status = newState\r\n\r\n      return {\r\n        taskData: newTaskData\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteTask = (index) => {  \r\n    this.setState ( prevState => {\r\n      let newTaskData = prevState.taskData\r\n      newTaskData = newTaskData.filter( (task) => task.index !== index )\r\n    return {\r\n        taskData: newTaskData\r\n      }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className='App'>\r\n        <Header />\r\n        {this.state.taskData.map((task) => {\r\n          return (\r\n            <Task\r\n              text = {task.text}\r\n              key = {task.index}\r\n              status = {task.status}\r\n              index = {task.index}\r\n              changeTaskStatus = {this.changeTaskStatus}\r\n              deleteTask = {this.deleteTask}\r\n              newTask = {false}\r\n              updateTaskText = {this.updateTaskText}\r\n            />)\r\n        })}\r\n        <Task\r\n          key = {'add-task'}\r\n          newTask = {true}\r\n          handleSubmit = {this.handleSubmit}\r\n           />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}